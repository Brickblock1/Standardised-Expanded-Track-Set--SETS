# 1 "sukts.pnml"

# 1 "src/definitions.pnml" 1










	
	





spriteset(gfx_blank, "gfx/tracks.png"){
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
	[ 0  , 0 , 1 , 1 , 0,  0  ]
}

spriteset(gfx_blank_tile, "gfx/tracks.png"){
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
	[ 0,	0,		64,		31,		-31,	0	]
}


template template_ballast(x, y){
	[x+350,	y,		64,		31,		-31,	0	]//North East
	[x+420,	y,		64,		31,		-31,	0	]//North West
	[x+700,	y,		64,		31,		-31,	0	]//Horizontal Top
	[x+630,	y,		64,		31,		-31,	0	]//Horizontal Bottom
	[x+560,	y,		64,		31,		-31,	0	]//Vertical Right
	[x+490,	y,		64,		31,		-31,	0	]//Vertical Left
	[x+490,	y+70,	64,		41,		-31,	-10	]//Slope NE
	[x+560,	y+70,	64,		41,		-31,	-10	]//Slope SE
	[x+630,	y+70,	64,		41,		-31,	-10	]//Slope SW
	[x+700,	y+70,	64,		41,		-31,	-10	]//Slope NW
	[x+350,	y+35,	64,		31,		-31,	0	]//Cross over
	[x+490,	y+35,	64,		31,		-31,	0 	]//Junction SW
	[x+560,	y+35,	64,		31,		-31,	0	]//Junction NE
	[x+630,	y+35,	64,		31,		-31,	0	]//Junction SE
	[x+700,	y+35,	64,		31,		-31,	0	]//Junction NW
	[x+420,	y+35,	64,		31,		-31,	0	]//Full tile
}

template template_overlay(x, y){
	[x,		y,		64,		31,		-31,	0	]//North East
	[x+70,	y,		64,		31,		-31,	0	]//North West
	[x+350,	y,		64,		31,		-31,	0	]//Horizontal Top
	[x+280,	y,		64,		31,		-31,	0	]//Horizontal Bottom
	[x+210,	y,		64,		31,		-31,	0	]//Vertical Right
	[x+140,	y,		64,		31,		-31,	0	]//Vertical Left
	[x+560,	y+40,	64,		41,		-31,	-10	]//Slope NE
	[x+630,	y+40,	64,		41,		-31,	-10	]//Slope SE
	[x+700,	y+40,	64,		41,		-31,	-10	]//Slope SW
	[x+770,	y+40,	64,		41,		-31,	-10	]//Slope NW
}

/*
	[x+140,	y+40,	64,		41,		-31,	-10	]//Slope NE
	[x+210,	y+40,	64,		41,		-31,	-10	]//Slope SE
	[x+280,	y+40,	64,		41,		-31,	-10	]//Slope SW
	[x+350,	y+40,	64,		41,		-31,	-10	]//Slope NW
}*/

template template_underlay(x, y , x2){
	[x+420,		y+0,	64,		31,		-31,	0	]//North East
	[x+490,		y+0,	64,		31,		-31,	0	]//North West
	[x+770,		y+0,	64,		31,		-31,	0	]//Horizontal Top
	[x+700,		y+0,	64,		31,		-31,	0	]//Horizontal Bottom
	[x+630,		y+0,	64,		31,		-31,	0	]//Vertical Right
	[x+560,		y+0,	64,		31,		-31,	0	]//Vertical Left
	[x+560,		y+40,	64,		41,		-31,	-10	]//Slope NE
	[x+630,		y+40,	64,		41,		-31,	-10	]//Slope SE
	[x+700,		y+40,	64,		41,		-31,	-10	]//Slope SW
	[x+770,		y+40,	64,		41,		-31,	-10	]//Slope NW
	[x+420,		y+40,	64,		31,		-31,	0	]//Cross over
	[x2+140,	35,		64,		31,		-31,	0 	]//Junction SW
	[x2+210,	35,		64,		31,		-31,	0	]//Junction NE
	[x2+280,	35,		64,		31,		-31,	0	]//Junction SE
	[x2+350,	35,		64,		31,		-31,	0	]//Junction NW
	[x2+70,		35,		64,		31,		-31,	0	]//Full tile
}

template template_underlay_bridge(x, y){
	[x+420,		y+0,	64,		31,		-31,	0	]//North East
	[x+490,		y+0,	64,		31,		-31,	0	]//North West
	[x+560,		y+40,	64,		41,		-31,	-10	]//Slope NE
	[x+630,		y+40,	64,		41,		-31,	-10	]//Slope SE
	[x+700,		y+40,	64,		41,		-31,	-10	]//Slope SW
	[x+770,		y+40,	64,		41,		-31,	-10	]//Slope NW
	[x+770,		y+0,	64,		31,		-31,	0	]//Horizontal Top
	[x+700,		y+0,	64,		31,		-31,	0	]//Horizontal Bottom
	[x+630,		y+0,	64,		31,		-31,	0	]//Vertical Right
	[x+560,		y+0,	64,		31,		-31,	0	]//Vertical Left
}


template template_tunnel_tracks(x, y) {
	[213,		y,	64,		31,		-31,	0	]
	[x+490,		y,	64,		31,		-31,	0	]
	[x+420,		y,	64,		31,		-31,	0	]
	[283,		y,	64,		31,		-31,	0	]
}

template template_lc_track(y){
	[213,		y+40,		64,		31,		-31,	0	]//North East
	[283,		y+40,		64,		31,		-31,	0	]//North West
}

template template_lc_decorations(x, y){
	[213,		y+40,		64,		31,		-31,	0	]//North East
	[283,		y+40,		64,		31,		-31,	0	]//North West
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
	[ x  , 0 , 1 , 1 , 0,  0  ]
}

template template_signals(x, y){
	[ x  , y , 20 , 30 , -10,  -28  ]
	[ x+60  , y , 20 , 30 , -10,  -28  ]
	[ x+120 , y , 20 , 30 , -10,  -28  ]
	[ x+180 , y , 20 , 30 , -10,  -28  ]
	[ x+240 , y , 20 , 30 , -10,  -28  ]
	[ x+300 , y , 20 , 30 , -10,  -28  ]
	[ x+360 , y , 20 , 30 , -10,  -28  ]
	[ x+420 , y , 20 , 30 , -10,  -28  ]
}








/*******************************************
// Newer track templates based off of AuzRails
 *******************************************/




template template_overlay_auz() {
    //left_x, upper_y, width, height, offset_x, offset_y
    [   1,		1,		64,		31,		-31,	0	]
    [  66,		1,		64,		31,		-31,	0	]
    [ 131,		1,		64,		31,		-31,	0	]
    [ 196,		1,		64,		31,		-31,	0	]
    [ 261,		1,		64,		31,		-31,	0	]
    [ 326,		1,		64,		31,		-31,	0	]
	//Slopes
    [ 391,		1,		64,		41,		-31,	-10	]
    [ 456,		1,		64,		41,		-31,	-10	]
    [ 521,		1,		64,		41,		-31,	-10	]
    [ 586,		1,		64,		41,		-31,	-10	]
}


template template_underlay_auz() {
    //left_x, upper_y, width, height, offset_x, offset_y
    [   1,		1,		64,		31,		-31,	0	]
    [  66,		1,		64,		31,		-31,	0	]
    [ 131,		1,		64,		31,		-31,	0	]
    [ 196,		1,		64,		31,		-31,	0	]
    [ 261,		1,		64,		31,		-31,	0	]
    [ 326,		1,		64,		31,		-31,	0	]
	//Slopes
    [ 391,		1,		64,		41,		-31,	-10	]
    [ 456,		1,		64,		41,		-31,	-10	]
    [ 521,		1,		64,		41,		-31,	-10	]
    [ 586,		1,		64,		41,		-31,	-10	]
	//Crossing
    [	1,		49,		64,		31,		-31,	0	]
     //Ground for switches
    [	66,		49,		64,		31,		-31,	0	]
    [	131,	49,		64,		31,		-31,	0	]
    [	196,	49,		64,		31,		-31,	0	]
    [	261,	49,		64,		31,		-31,	0	]
    [	326,	49,		64,		31,		-31,	0	]
}


//Tunnel Tracks, to be used for trackoverlay in vanilla tunnels or tunnels provided by a tunnel-replacement GRF
template template_tunneltracks() {
	//left_x, upper_y, width, height, offset_x, offset_y
    [   3,    1,       64,    31,       -31,        0]
    [  68,    1,       64,    31,       -31,        0]
    [   3,   64,       64,    31,       -31,        0]
    [  68,   64,       64,    31,       -31,        0]
}








/*******************************************
//Custom Tunnel
 *******************************************/

template tmpl_tunnel_overlaytracks() {
	//left_x, upper_y, width, height, offset_x, offset_y 
 [ 10, 50, 64, 50, -31, -19]
 [158, 50, 64, 50, -31, -19]
 [306, 50, 64, 50, -31, -19]
 [454, 50, 64, 50, -31, -19]
 }

 template tmpl_tunnel_overlays() {
	//left_x, upper_y, width, height, offset_x, offset_y 
 [ 84, 50, 64, 50, -31, -49]
 [232, 50, 64, 50, -31, -49]
 [380, 50, 64, 50, -31, -49]
 [528, 50, 64, 50, -31, -49]
}







/*******************************************
//Bridge Surface Tracks
 *******************************************/

template template_bridgetracks() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[	1,		1,		64,		31,		-31,	0	]
	[	66,		1,		64,		31,		-31,	0	]
	//Slopes
	[	131,	1,		64,		41,		-31,	-10	]
	[	196,	1,		64,		41,		-31,	-10	]
	[	261,	1,		64,		41,		-31,	-10	]
	[	326,	1,		64,		41,		-31,	-10	]
}




/*******************************************
// railtype level crossings
 *******************************************/

template tmpl_level_crossing_railtypes_empty() {
 [ 1,1, 64,31, -31, 0]
 [ 66,1, 64,31, -31, 0]
}

//Level Crossings (Closed)
template template_levcrossclosed() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[  1,     1,       64,    31,       -31,          0,	ANIM]
	[ 66,     1,       64,    31,       -31,          0,	ANIM]
	[  1,   115,       64,    50,       -31,        -19,	ANIM]	
	[ 66,   115,       64,    50,       -31,        -19,	ANIM]
	[  1,    50,       64,    50,       -57,        -32,	ANIM]
	[196,   115,       64,    50,       -57,        -32,	ANIM]
	[131,   115,       64,    50,        -5,        -32,	ANIM]
	[ 66,    50,       64,    50,        -5,        -32,	ANIM]
	[131,    50,       64,    50,       -31,        -45,	ANIM]
	[196,    50,       64,    50,       -31,        -45,	ANIM]
}

//Level Crossings (Open)
template template_levcrossopen() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[  1,     1,       64,    31,       -31,          0,	ANIM]
	[ 66,     1,       64,    31,       -31,          0,	ANIM]
	[  1,   245,       64,    50,       -31,        -19,	ANIM]	
	[ 66,   245,       64,    50,       -31,        -19,	ANIM]
	[  1,   180,       64,    50,       -57,        -32,	ANIM]
	[196,   245,       64,    50,       -57,        -32,	ANIM]
	[131,   245,       64,    50,        -5,        -32,	ANIM]
	[ 66,   180,       64,    50,        -5,        -32,	ANIM]
	[131,   180,       64,    50,       -31,        -45,	ANIM]
	[196,   180,       64,    50,       -31,        -45,	ANIM]
}








/*******************************************
//Fences
 *******************************************/

template template_fences() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[  2,  1, 33, 26,  -33,  -12] //Back of Track
	[ 50,  1, 33, 26,    3,  -11] //Back of Track
	[ 98,  5,  2, 38,    0, -22] //Right of Track
	[114,  1, 65,  10,  -31,  -10] //Bottom of Track
	[194,  1, 33, 19,  -33,  -13] //Back of Track (slope)
	[242,  1, 33, 19,    3,  -12] //Back of Track (slope)
	[290,  1, 33, 35,  -33, -21] //Back of Track (slope)
	[338,  1, 33, 35,    3, -20] //Back of Track (slope)
	[  2, 46, 33, 26,  -29,  -10] //Front of Track
	[ 50, 46, 33, 26,   -1,  -9] //Front of Track
	[ 98, 50,  2, 38,    1, -22] //Left of Track
	[114, 46, 65,  10,  -31,  -10] //Top of Track
	[194, 46, 33, 19,  -29,  -11] //Front of Track (slope)
	[242, 46, 33, 19,   -1,  -10] //Front of Track (slope)
	[290, 46, 33, 35,  -29, -19] //Front of Track (slope)
	[338, 46, 33, 35,   -1, -18] //Front of Track (slope)

}

template tmpl_fences() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[  2,  1, 33, 31,  -33,  -17] //Back of Track
	[ 50,  1, 33, 31,    3,  -16] //Back of Track
	[ 98,  5,  2, 38,    0, -22] //Right of Track
	[114,  1, 65,  15,  -31,  -15] //Bottom of Track
	[194,  1, 33, 24,  -33,  -18] //Back of Track (slope)
	[242,  1, 33, 24,    3,  -17] //Back of Track (slope)
	[290,  1, 33, 40,  -33, -26] //Back of Track (slope)
	[338,  1, 33, 40,    3, -25] //Back of Track (slope)
	[  2, 46, 33, 31,  -29,  -15] //Front of Track
	[ 50, 46, 33, 31,   -1,  -14] //Front of Track
	[ 98, 50,  2, 38,    1, -22] //Left of Track
	[114, 46, 65,  15,  -31,  -15] //Top of Track
	[194, 46, 33, 24,  -29,  -16] //Front of Track (slope)
	[242, 46, 33, 24,   -1,  -15] //Front of Track (slope)
	[290, 51, 33, 40,  -29, -24] //Front of Track (slope)
	[338, 51, 33, 40,   -1, -23] //Front of Track (slope)

}



//No Fences
template template_nofences() {
	//left_x, upper_y, width, height, offset_x, offset_y
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
	[  0,0,1,1,0,0]
}

spriteset(spriteset_nofences, "gfx/track.png") {
 template_nofences()
}










/*******************************************
//Depot
 *******************************************/

template template_depot() {
	//left_x, upper_y, width, height, offset_x, offset_y 
  [   42, 85, 24, 25,   9,  -6]   
  [    2, 24, 64, 58,  -9, -42] 
  [   82, 85, 24, 25, -31,  -6] 
  [   82, 24, 64, 58, -53, -42]
  [  242, 24, 64, 58, -53, -42]
  [  162, 24, 64, 58,  -9, -42] 
}













/**********************************************
//Catenarypylons
 **********************************************/

template template_catenarypylons() {
    //[left_x, upper_y, width, height, offset_x, offset_y]
 [ 10, 20, 14, 30, -11, -28]
 [ 34, 20, 14, 30, 1, -28]
 [ 58, 20, 14, 30, -1, -28]
 [ 82, 20, 14, 30, -13, -28]
 [ 106, 20, 14, 30, -6, -29]
 [ 130, 20, 14, 30, -6, -28]
 [ 154, 20, 14, 30, 0, -29]
 [ 178, 20, 14, 30, -13, -29]
}

//Catenarypylons
template template_catenarydoublepylons() {
    //[left_x, upper_y, width, height, offset_x, offset_y]
 [ 4, 28, 14, 32, -11, -30]
 [ 20, 17, 40, 43, 1, -41]
 [ 62, 28, 14, 32, -1, -30]
 [ 78, 17, 40, 43, -39, -41]
 [ 120, 28, 14, 32, -6, -39]
 [ 136, 16, 14, 44, -6, -43]
 [ 152, 28, 28, 32, 0, -31]
 [ 181, 28, 27, 32, -26, -31]
}

//Catenarypylons
template template_catenarymultipylons() {
    //[left_x, upper_y, width, height, offset_x, offset_y]
 [ 2, 22, 42, 38, -29, -27] //ok
 [ 46, 11, 52, 49, -5, -44] //ok
 [ 100, 22, 42, 38, -9, -27] //ok
 [ 144, 11, 52, 49, -43, -44] //ok
 [ 198, 28, 14, 32, -6, -43] //
 [ 214, 12, 14, 44, -6, -47] //
 [ 230, 28, 44, 32, -7, -31] //
 [ 276, 28, 44, 32, -33, -31] //
}

//Catenarypylons
template template_catenarycentrepylons() {
    //[left_x, upper_y, width, height, offset_x, offset_y]
 [ 2, 22, 42, 38, -25, -29] //ok
 [ 46, 11, 52, 49, -13, -40] //ok
 [ 100, 22, 42, 38, -15, -29] //ok
 [ 144, 11, 52, 49, -37, -40] //ok
 [ 198, 28, 14, 32, -6, -43] //
 [ 214, 12, 14, 44, -6, -47] //
 [ 230, 28, 44, 32, -20, -31] //ok
 [ 276, 28, 44, 32, -28, -31] //ok
}











/**********************************************
//Catenarywires
 **********************************************/

template template_catenarywires() {
    //[left_x, upper_y, width, height, offset_x, offset_y]
 [ 10, 100, 64, 42, -45, -20]
 [ 100, 100, 64, 42, -17, -20]
 [ 200, 100, 32, 11, 0, -12] //-1
 [ 300, 100, 1, 21, 1, -8] //0
 [ 10, 200, 64, 50, -45, -21]
 [ 100, 200, 64, 34, -17, -10]
 [ 200, 200, 64, 34, -45, -10]
 [ 300, 200, 64, 50, -17, -21]
 [ 10, 300, 64, 42, -45, -20]
 [ 100, 300, 64, 42, -17, -20]
 [ 200, 300, 32, 11, 0, -12]
 [ 300, 300, 1, 21, 1, -8] //0
 [ 10, 400, 64, 50, -45, -21]
 [ 100, 400, 64, 34, -17, -10]
 [ 200, 400, 64, 34, -45, -10]
 [ 300, 400, 64, 50, -17, -21]
 [ 10, 500, 64, 42, -45, -20]
 [ 100, 500, 64, 42, -17, -20]
 [ 200, 500, 32, 11, 0, -12]
 [ 300, 500, 1, 21, 1, -8] //0
 [ 10, 600, 64, 50, -45, -21]
 [ 100, 600, 64, 34, -17, -10]
 [ 200, 600, 64, 34, -45, -10]
 [ 300, 600, 64, 50, -17, -21]
 [ 10, 700, 64, 42, -45, -20]
 [ 100, 700, 64, 42, -17, -20]
 [ 200, 700, 64, 42, -45, -20]
 [ 300, 700, 64, 42, -17, -20]
}

# 1 "src/catenary_masts.pnml" 1
template tmpl_catenary_masts (y) {
    [0,  y, 8, 18, -7, -14]
    [10, y, 8, 18,  1, -17]
    [20, y, 8, 18,  1, -14]
    [30, y, 8, 18, -7, -17]
    [40, y, 2, 18, -0, -15]
    [50, y, 2, 18, -0, -16]
    [60, y, 8, 18,  1, -14]
    [70, y, 8, 18, -7, -14]
}

spriteset (gfx_catenary_masts_15, "gfx/catenary_masts.png") {
    tmpl_catenary_masts(0)
}

spriteset (gfx_catenary_masts_25, "gfx/catenary_masts.png") {
    tmpl_catenary_masts(20)
}

spriteset (gfx_catenary_masts_1500, "gfx/catenary_masts.png") {
    tmpl_catenary_masts(40)
}

spriteset (gfx_catenary_masts_3, "gfx/catenary_masts.png") {
    tmpl_catenary_masts(60)
}
# 1 "src/definitions.pnml" 560

# 1 "sukts.pnml" 2

# 1 "src/header.pnml" 1
grf{
	grfid: "SUKT" ;
	name: string(STR_GRF_NAME) ;
	desc: string(STR_GRF_DESC) ;
	version: 17 ;
	min_compatible_version: 0 ;
	param 0{
		toggle_limits{
			type    : bool ;
			name    : string(STR_PARAM_SPEEDLIMITS_NAME) ;
			desc    : string(STR_PARAM_SPEEDLIMITS_DESC) ;
			bit     : 1 ;
			def_value : 0 ;
		}
		wide_ballast{
			type    : bool ;
			name    : string(STR_PARAM_TRACK_WIDE_BALLAST_NAME) ;
			desc    : string(STR_PARAM_TRACK_WIDE_BALLAST_DESC) ;
			bit     : 2 ;
			def_value : 0 ;
		}
	}
	param 1{
		cost_multiplier{
			type    : int ;
			name    : string(STR_PARAM_COSTS_BUILD_NAME) ;
			desc    : string(STR_PARAM_SPEEDLIMITS_DESC) ;
			min_value	: 0 ;
			max_value	: 7 ;
			def_value	: 4 ;
			names		: {
				0	: string(STR_PARAM_VVVLOW  ) ;
				1	: string(STR_PARAM_VVLOW) ;
				2	: string(STR_PARAM_VLOW) ;
				3	: string(STR_PARAM_LOW ) ;
				4	: string(STR_PARAM_MEDIUM ) ;
				5	: string(STR_PARAM_HIGH ) ;
				6	: string(STR_PARAM_TOOMUCH ) ;
				7	: string(STR_PARAM_TOOTOOMUCH ) ;
			} ;
		}
	}
	param 2{
		speed_1{
			type    : int ;
			name    : string(STR_PARAM_SPEED_1) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 15 ;
		}
	}
	param 3{
		speed_2{
			type    : int ;
			name    : string(STR_PARAM_SPEED_2) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 20 ;
		}
	}
	param 4{
		speed_3{
			type    : int ;
			name    : string(STR_PARAM_SPEED_3) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 40 ;
		}
	}
	param 5{
		speed_4{
			type    : int ;
			name    : string(STR_PARAM_SPEED_4) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 60 ;
		}
	}
	param 6{
		speed_5{
			type    : int ;
			name    : string(STR_PARAM_SPEED_5) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 75 ;
		}
	}
	param 7{
		speed_6{
			type    : int ;
			name    : string(STR_PARAM_SPEED_6) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 100 ;
		}
	}
	param 8{
		speed_7{
			type    : int ;
			name    : string(STR_PARAM_SPEED_7) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 100 ;
		}
	}
	param 9{
		speed_8{
			type    : int ;
			name    : string(STR_PARAM_SPEED_8) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 125 ;
		}
	}
	param 10{
		speed_9{
			type    : int ;
			name    : string(STR_PARAM_SPEED_9) ;
			desc    : string(STR_PARAM_SPEED_DESC) ;
			min_value	: 0 ;
			max_value	: 500 ;
			def_value	: 187 ;
		}
	}
	param 11{
		extra_tracks{
			type    : int ;
			name    : string(STR_PARAM_TRACK_LIST_NAME) ;
			desc    : string(STR_PARAM_TRACK_LIST_DESC) ;
			min_value	: 0 ;
			max_value	: 3 ;
			def_value	: 0 ;
			names		: {
				0	: string(STR_PARAM_TRACK_ONE ) ;
				1	: string(STR_PARAM_TRACK_MIN ) ;
				2	: string(STR_PARAM_TRACK_STANDARD ) ;
				3	: string(STR_PARAM_TRACK_EXTRA ) ;
			} ;
		}
	}
	param 12{
		signal_elec {
 			type:    int;
 			name:    string(STR_PARAM_SIGNAL_ELEC_NAME);
 			desc:    string(STR_PARAM_SIGNAL_ELEC_DESC);
 			min_value: 0;
 			max_value: 2;
 			def_value: 0;
 			names: {
 				0: string(STR_PARAM_SIGNAL_ELEC_2ASP);
 				1: string(STR_PARAM_SIGNAL_ELEC_3ASP);
 				2: string(STR_PARAM_SIGNAL_ELEC_4ASP);
 			};
		}
	}
	param 13{
		fence_number {
 			type:    int;
 			name:    string(STR_PARAM_GFX_FENCE_NAME);
 			desc:    string(STR_PARAM_GFX_FENCE_DESC);
 			min_value: 0;
 			max_value: 3;
 			def_value: 0;
 			names: {
 				0: string(STR_PARAM_GFX_FENCE_ALL);
 				1: string(STR_PARAM_GFX_FENCE_MOST);
 				2: string(STR_PARAM_GFX_FENCE_SOME);
 				3: string(STR_PARAM_GFX_FENCE_NONE);
 			};
		}
	}
	param 14{
		depot_type {
 			type:    int;
 			name:    string(STR_PARAM_GFX_DEPOT_NAME);
 			desc:    string(STR_PARAM_GFX_DEPOT_DESC);
 			min_value: 0;
 			max_value: 2;
 			def_value: 1;
 			names: {
 				0: string(STR_PARAM_GFX_DEPOT_ALL);
 				1: string(STR_PARAM_GFX_DEPOT_ONE);
 				2: string(STR_PARAM_GFX_DEPOT_DEFAULT);
 			};
		}
	}
	param 15{
		decor_tracks{
			type    : bool ;
			name    : string(STR_PARAM_DECOR_NAME) ;
			desc    : string(STR_PARAM_DECOR_DESC) ;
			bit     : 1 ;
			def_value : 0 ;
		}
	}
}

basecost{
	PR_BUILD_RAIL	: (param[1]-3) ;
}

# 1 "sukts.pnml" 2

# 1 "src/signals.pnml" 1
//Signal sprites for 2 aspect signals
spriteset(aspect2_r_block, "gfx/signal_electric_2asp.png") {template_signals(10,50)}
spriteset(aspect2_g_block, "gfx/signal_electric_2asp.png") {template_signals(40,50)}
spriteset(aspect2_r_en, "gfx/signal_electric_2asp.png") {template_signals(10,85)}
spriteset(aspect2_g_en, "gfx/signal_electric_2asp.png") {template_signals(40,85)}
spriteset(aspect2_r_ex, "gfx/signal_electric_2asp.png") {template_signals(10,120)}
spriteset(aspect2_g_ex, "gfx/signal_electric_2asp.png") {template_signals(40,120)}
spriteset(aspect2_r_co, "gfx/signal_electric_2asp.png") {template_signals(10,155)}
spriteset(aspect2_g_co, "gfx/signal_electric_2asp.png") {template_signals(40,155)}
spriteset(aspect2_r_path, "gfx/signal_electric_2asp.png") {template_signals(10,190)}
spriteset(aspect2_g_path, "gfx/signal_electric_2asp.png") {template_signals(40,190)}
spriteset(aspect2_r_owp, "gfx/signal_electric_2asp.png") {template_signals(10,225)}
spriteset(aspect2_g_owp, "gfx/signal_electric_2asp.png") {template_signals(40,225)}

//Switches for 2 aspect signals

switch(FEAT_RAILTYPES, SELF, sw_aspect2_r, getbits(extra_callback_info2, 16, 8)){
00 : aspect2_r_block;
01 : aspect2_r_en;
02 : aspect2_r_ex;
03 : aspect2_r_co;
04 : aspect2_r_path;
05 : aspect2_r_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect2_g, getbits(extra_callback_info2, 16, 8)){
00 : aspect2_g_block;
01 : aspect2_g_en;
02 : aspect2_g_ex;
03 : aspect2_g_co;
04 : aspect2_g_path;
05 : aspect2_g_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect2, getbits(extra_callback_info2, 0, 8)){
00 : sw_aspect2_r;
01 : sw_aspect2_g;
}

//Signal sprites for 3 aspect green/red signals
spriteset(aspect3_r_block, "gfx/signal_electric_3asp_2.png") {template_signals(10,50)}
spriteset(aspect3_g_block, "gfx/signal_electric_3asp_2.png") {template_signals(40,50)}
spriteset(aspect3_r_en, "gfx/signal_electric_3asp_2.png") {template_signals(10,85)}
spriteset(aspect3_g_en, "gfx/signal_electric_3asp_2.png") {template_signals(40,85)}
spriteset(aspect3_r_ex, "gfx/signal_electric_3asp_2.png") {template_signals(10,120)}
spriteset(aspect3_g_ex, "gfx/signal_electric_3asp_2.png") {template_signals(40,120)}
spriteset(aspect3_r_co, "gfx/signal_electric_3asp_2.png") {template_signals(10,155)}
spriteset(aspect3_g_co, "gfx/signal_electric_3asp_2.png") {template_signals(40,155)}
spriteset(aspect3_r_path, "gfx/signal_electric_3asp_2.png") {template_signals(10,190)}
spriteset(aspect3_g_path, "gfx/signal_electric_3asp_2.png") {template_signals(40,190)}
spriteset(aspect3_r_owp, "gfx/signal_electric_3asp_2.png") {template_signals(10,225)}
spriteset(aspect3_g_owp, "gfx/signal_electric_3asp_2.png") {template_signals(40,225)}
spriteset(aspect3_y_block, "gfx/signal_electric_3asp_2.png") {template_signals(40,260)}
spriteset(aspect3_y_path, "gfx/signal_electric_3asp_2.png") {template_signals(40,295)}
spriteset(aspect3_y_owp, "gfx/signal_electric_3asp_2.png") {template_signals(40,330)}

//Switches for 3 aspect green/red signals

switch(FEAT_RAILTYPES, SELF, sw_aspect3_r, getbits(extra_callback_info2, 16, 8)){
00 : aspect3_r_block;
01 : aspect3_r_en;
02 : aspect3_r_ex;
03 : aspect3_r_co;
04 : aspect3_r_path;
05 : aspect3_r_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect3_g, getbits(extra_callback_info2, 16, 8)){
00 : aspect3_g_block;
01 : aspect3_g_en;
02 : aspect3_g_ex;
03 : aspect3_g_co;
04 : aspect3_g_path;
05 : aspect3_g_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect3_y, getbits(extra_callback_info2, 16, 8)){
00 : aspect3_y_block;
01 : aspect3_g_en;
02 : aspect3_g_ex;
03 : aspect3_g_co;
04 : aspect3_y_path;
05 : aspect3_y_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect3, getbits(extra_callback_info2, 0, 2)){
00 : sw_aspect3_r;
01 : sw_aspect3_g;
02 : sw_aspect3_y;
}


//Signal sprites for 4 aspect green/red signals
spriteset(aspect4_r_block, "gfx/signal_electric_full_4asp.png") {template_signals(10,50)}
spriteset(aspect4_g_block, "gfx/signal_electric_full_4asp.png") {template_signals(40,50)}
spriteset(aspect4_r_en, "gfx/signal_electric_full_4asp.png") {template_signals(10,85)}
spriteset(aspect4_g_en, "gfx/signal_electric_full_4asp.png") {template_signals(40,85)}
spriteset(aspect4_r_ex, "gfx/signal_electric_full_4asp.png") {template_signals(10,120)}
spriteset(aspect4_g_ex, "gfx/signal_electric_full_4asp.png") {template_signals(40,120)}
spriteset(aspect4_r_co, "gfx/signal_electric_full_4asp.png") {template_signals(10,155)}
spriteset(aspect4_g_co, "gfx/signal_electric_full_4asp.png") {template_signals(40,155)}
spriteset(aspect4_r_path, "gfx/signal_electric_full_4asp.png") {template_signals(10,190)}
spriteset(aspect4_g_path, "gfx/signal_electric_full_4asp.png") {template_signals(40,190)}
spriteset(aspect4_r_owp, "gfx/signal_electric_full_4asp.png") {template_signals(10,225)}
spriteset(aspect4_g_owp, "gfx/signal_electric_full_4asp.png") {template_signals(40,225)}
spriteset(aspect4_y_block, "gfx/signal_electric_full_4asp.png") {template_signals(10,260)}
spriteset(aspect4_yy_block, "gfx/signal_electric_full_4asp.png") {template_signals(40,260)}
spriteset(aspect4_y_path, "gfx/signal_electric_full_4asp.png") {template_signals(10,295)}
spriteset(aspect4_yy_path, "gfx/signal_electric_full_4asp.png") {template_signals(40,295)}
spriteset(aspect4_y_owp, "gfx/signal_electric_full_4asp.png") {template_signals(10,330)}
spriteset(aspect4_yy_owp, "gfx/signal_electric_full_4asp.png") {template_signals(40,330)}

//Switches for 4 aspect green/red signals

switch(FEAT_RAILTYPES, SELF, sw_aspect4_r, getbits(extra_callback_info2, 16, 8)){
00 : aspect4_r_block;
01 : aspect4_r_en;
02 : aspect4_r_ex;
03 : aspect4_r_co;
04 : aspect4_r_path;
05 : aspect4_r_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect4_g, getbits(extra_callback_info2, 16, 8)){
00 : aspect4_g_block;
01 : aspect4_g_en;
02 : aspect4_g_ex;
03 : aspect4_g_co;
04 : aspect4_g_path;
05 : aspect4_g_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect4_y, getbits(extra_callback_info2, 16, 8)){
00 : aspect4_y_block;
01 : aspect4_g_en;
02 : aspect4_g_ex;
03 : aspect4_g_co;
04 : aspect4_y_path;
05 : aspect4_y_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect4_yy, getbits(extra_callback_info2, 16, 8)){
00 : aspect4_yy_block;
01 : aspect4_g_en;
02 : aspect4_g_ex;
03 : aspect4_g_co;
04 : aspect4_yy_path;
05 : aspect4_yy_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect4, getbits(extra_callback_info2, 0, 2)) {
    00: sw_aspect4_r;
    01: sw_aspect4_g;
    02: sw_aspect4_y;
    03: sw_aspect4_yy;
}

//Signal sprites for 2 aspect SEMAPHORE signals
spriteset(aspect2_S_r_block, "gfx/signal_semaphore_2asp.png") {template_signals(10,50)}
spriteset(aspect2_S_g_block, "gfx/signal_semaphore_2asp.png") {template_signals(40,50)}
spriteset(aspect2_S_r_en, "gfx/signal_semaphore_2asp.png") {template_signals(10,85)}
spriteset(aspect2_S_g_en, "gfx/signal_semaphore_2asp.png") {template_signals(40,85)}
spriteset(aspect2_S_r_ex, "gfx/signal_semaphore_2asp.png") {template_signals(10,120)}
spriteset(aspect2_S_g_ex, "gfx/signal_semaphore_2asp.png") {template_signals(40,120)}
spriteset(aspect2_S_r_co, "gfx/signal_semaphore_2asp.png") {template_signals(10,155)}
spriteset(aspect2_S_g_co, "gfx/signal_semaphore_2asp.png") {template_signals(40,155)}
spriteset(aspect2_S_r_path, "gfx/signal_semaphore_2asp.png") {template_signals(10,190)}
spriteset(aspect2_S_g_path, "gfx/signal_semaphore_2asp.png") {template_signals(40,190)}
spriteset(aspect2_S_r_owp, "gfx/signal_semaphore_2asp.png") {template_signals(10,225)}
spriteset(aspect2_S_g_owp, "gfx/signal_semaphore_2asp.png") {template_signals(40,225)}

//Switches for 2 aspect SEMAPHORE signals

switch(FEAT_RAILTYPES, SELF, sw_aspect2_S_r, getbits(extra_callback_info2, 16, 8)){
00 : aspect2_S_r_block;
01 : aspect2_S_r_en;
02 : aspect2_S_r_ex;
03 : aspect2_S_r_co;
04 : aspect2_S_r_path;
05 : aspect2_S_r_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect2_S_g, getbits(extra_callback_info2, 16, 8)){
00 : aspect2_S_g_block;
01 : aspect2_S_g_en;
02 : aspect2_S_g_ex;
03 : aspect2_S_g_co;
04 : aspect2_S_g_path;
05 : aspect2_S_g_owp;
}

switch(FEAT_RAILTYPES, SELF, sw_aspect2_S, getbits(extra_callback_info2, 0, 2)) {
    00: sw_aspect2_S_r;
    01: sw_aspect2_S_g;
    02: sw_aspect2_S_g;
    03: sw_aspect2_S_g;
}

//What kind of electric signal do you want?

switch(FEAT_RAILTYPES, SELF, sw_electric_signals_general, signal_elec){
0 : sw_aspect2;
1 : sw_aspect3;
2 : sw_aspect4;
3 : sw_aspect4;
sw_aspect2;
}

switch(FEAT_RAILTYPES, SELF, sw_electric_signals_slow, signal_elec){
0 : sw_aspect2;
1 : sw_aspect3;
sw_aspect4;
}

switch(FEAT_RAILTYPES, SELF, sw_signals, getbits(extra_callback_info2, 8, 8)){
0 : sw_electric_signals_general;
sw_aspect2_S;
}

switch(FEAT_RAILTYPES, SELF, sw_signals_slow, getbits(extra_callback_info2, 8, 8)){
0 : sw_electric_signals_slow;
sw_aspect2_S;
}

switch(FEAT_RAILTYPES, SELF, sw_signals_low_speed, signal_elec){
0..2 : sw_signals;
sw_signals_slow;
}

# 1 "sukts.pnml" 2
# 1 "src/depots.pnml" 1

spriteset(gfx_depot_1,		"gfx/Depot/Depot_1.png")			{	template_depot()					}



# 1 "sukts.pnml" 2

//#include "src/ballast.pnml"
//#include "src/standard.pnml"
//#include "src/overhead.pnml"
//#include "src/third_rail.pnml"
//#include "src/dual_volt.pnml"
//#include "src/fourth_rail.pnml"


# 1 "src/BLST/BLST.pnml" 1



//spriteset(gfx_overlays_BLST,			"gfx/BLST/BLST/Overlay_BLST.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_BLST,			"gfx/BLST/BLST/Underlay_BLST.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_BLST_wide,		"gfx/BLST/BLST/Underlay_BLST_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_BLST,		"gfx/BLST/BLST/TunnelTrack_BLST.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_BLST,		"gfx/BLST/BLST/BridgeTrack_BLST.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_BLST,				"gfx/BLST/BLST/Fences_BLST.png")		{	template_fences()					}
spriteset(gfx_depot_BLST,				"gfx/BLST/BLST/Depot_BLST.png")			{	template_depot()					}


spriteset(gfx_level_crossing_BLST_empty,	"gfx/BLST/BLST/LevelCrossing_BLST.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLST_closed,	"gfx/BLST/BLST/LevelCrossing_BLST.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLST_open,		"gfx/BLST/BLST/LevelCrossing_BLST.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_BLST_empty_modern,		"gfx/BLST/BLST/LevelCrossingModern_BLST.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLST_closed_modern,	"gfx/BLST/BLST/LevelCrossingModern_BLST.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLST_open_modern,		"gfx/BLST/BLST/LevelCrossingModern_BLST.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLST_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLST_closed ;
	gfx_level_crossing_BLST_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLST_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLST_open ;
	gfx_level_crossing_BLST_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_BLST_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_BLST_closed ;
	sw_lc_BLST_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_BLST, wide_ballast) {
 1: gfx_underlays_BLST_wide;
 gfx_underlays_BLST;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_BLST, depot_type){
	0 : gfx_depot_BLST ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_BLST, fence_number < 1){
	1 : gfx_fences_BLST ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_BLST) {
	property {
		label						: "BLST" ;
		name						: string(STR_BLST_NAME) ;
		menu_text					: string(STR_BLST_NAME) ;
		build_window_caption		: string(STR_BLST_BUILD_NAME) ;
		autoreplace_text			: string(STR_BLST_REPLACE_NAME) ;
		new_engine_text				: string(STR_BLST_NEW_TRAIN) ;
		toolbar_caption				: string(STR_BLST_TOOLBAR) ;
		compatible_railtype_list	: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		powered_railtype_list		: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 14 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(0,1,1) ;
		sort_order					: 6 ;
	}
	graphics {
		track_overlay		: sw_underlay_BLST ;
		underlay			: sw_underlay_BLST ;
		bridge_surfaces		: gfx_bridge_tracks_BLST ;
		tunnels				: gfx_tunnel_tracks_BLST ;
		level_crossings		: sw_lc_BLST_state ;
		fences				: sw_fences_BLST ;
		depots				: sw_depot_BLST ;
		signals				: sw_signals ;
	}
}














//spriteset(gfx_overlays_BLS2,			"gfx/BLST/BLS2/Overlay_BLS2.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_BLS2,			"gfx/BLST/BLS2/Underlay_BLS2.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_BLS2_wide,		"gfx/BLST/BLS2/Underlay_BLS2_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_BLS2,		"gfx/BLST/BLS2/TunnelTrack_BLS2.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_BLS2,		"gfx/BLST/BLS2/BridgeTrack_BLS2.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_BLS2,				"gfx/BLST/BLS2/Fences_BLS2.png")		{	template_fences()					}
spriteset(gfx_depot_BLS2,				"gfx/BLST/BLS2/Depot_BLS2.png")			{	template_depot()					}


spriteset(gfx_level_crossing_BLS2_empty,	"gfx/BLST/BLS2/LevelCrossing_BLS2.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLS2_closed,	"gfx/BLST/BLS2/LevelCrossing_BLS2.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLS2_open,		"gfx/BLST/BLS2/LevelCrossing_BLS2.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_BLS2_empty_modern,		"gfx/BLST/BLS2/LevelCrossingModern_BLS2.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLS2_closed_modern,	"gfx/BLST/BLS2/LevelCrossingModern_BLS2.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLS2_open_modern,		"gfx/BLST/BLS2/LevelCrossingModern_BLS2.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLS2_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLS2_closed ;
	gfx_level_crossing_BLS2_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLS2_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLS2_open ;
	gfx_level_crossing_BLS2_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_BLS2_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_BLS2_closed ;
	sw_lc_BLS2_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_BLS2, wide_ballast) {
 1: gfx_underlays_BLS2_wide;
 gfx_underlays_BLS2;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_BLS2, depot_type){
	0 : gfx_depot_BLS2 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_BLS2, fence_number < 1){
	1 : gfx_fences_BLS2 ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_BLS2) {
	property {
		label						: "BLS2" ;
		name						: string(STR_BLS2_NAME) ;
		menu_text					: string(STR_BLS2_NAME) ;
		build_window_caption		: string(STR_BLST_BUILD_NAME) ;
		autoreplace_text			: string(STR_BLST_REPLACE_NAME) ;
		new_engine_text				: string(STR_BLST_NEW_TRAIN) ;
		toolbar_caption				: string(STR_BLST_TOOLBAR) ;
		compatible_railtype_list	: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		powered_railtype_list		: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 14 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(0,1,1) ;
		sort_order					: 7 ;
	}
	graphics {
		track_overlay		: gfx_blank ;
		underlay			: sw_underlay_BLS2 ;
		bridge_surfaces		: gfx_bridge_tracks_BLS2 ;
		tunnels				: gfx_tunnel_tracks_BLS2 ;
		level_crossings		: sw_lc_BLS2_state ;
		fences				: sw_fences_BLS2 ;
		depots				: sw_depot_BLS2 ;
		signals				: sw_signals ;
	}
}











//spriteset(gfx_overlays_BLS3,			"gfx/BLST/BLS3/Overlay_BLS3.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_BLS3,			"gfx/BLST/BLS3/Underlay_BLS3.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_BLS3_wide,		"gfx/BLST/BLS3/Underlay_BLS3_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_BLS3,		"gfx/BLST/BLS3/TunnelTrack_BLS3.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_BLS3,		"gfx/BLST/BLS3/BridgeTrack_BLS3.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_BLS3,				"gfx/BLST/BLS3/Fences_BLS3.png")		{	template_fences()					}
spriteset(gfx_depot_BLS3,				"gfx/BLST/BLS3/Depot_BLS3.png")			{	template_depot()					}

/*
spriteset(gfx_level_crossing_BLS3_empty,	"gfx/BLST/BLS3/LevelCrossing_BLS3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLS3_closed,	"gfx/BLST/BLS3/LevelCrossing_BLS3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLS3_open,		"gfx/BLST/BLS3/LevelCrossing_BLS3.png")	{template_levcrossopen()				}*/

spriteset(gfx_level_crossing_BLS3_empty_modern,		"gfx/BLST/BLS3/LevelCrossingModern_BLS3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_BLS3_closed_modern,	"gfx/BLST/BLS3/LevelCrossingModern_BLS3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_BLS3_open_modern,		"gfx/BLST/BLS3/LevelCrossingModern_BLS3.png")	{template_levcrossopen()				}


/* Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLS3_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLS3_closed ;
	gfx_level_crossing_BLS3_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_BLS3_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_BLS3_open ;
	gfx_level_crossing_BLS3_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_BLS3_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_BLS3_closed ;
	sw_lc_BLS3_open ;
}
*/

// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_BLS3, wide_ballast) {
 1: gfx_underlays_BLS3_wide;
 gfx_underlays_BLS3;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_BLS3, depot_type){
	0 : gfx_depot_BLS3 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_BLS3, fence_number < 1){
	1 : gfx_fences_BLS3 ;
	gfx_blank ;
}




// Item

item(FEAT_RAILTYPES, rail_BLS3) {
	property {
		label						: "BLS3" ;
		name						: string(STR_BLS3_NAME) ;
		menu_text					: string(STR_BLS3_NAME) ;
		build_window_caption		: string(STR_BLST_BUILD_NAME) ;
		autoreplace_text			: string(STR_BLST_REPLACE_NAME) ;
		new_engine_text				: string(STR_BLST_NEW_TRAIN) ;
		toolbar_caption				: string(STR_BLST_TOOLBAR) ;
		compatible_railtype_list	: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		powered_railtype_list		: ["BLST", "BLS2", "BLS3", "PLAN"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 14 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING) ;
		introduction_date			: date(0,1,1) ;
		sort_order					: 8 ;
	}
	graphics {
		track_overlay		: sw_underlay_BLS3 ;
		underlay			: sw_underlay_BLS3 ;
		bridge_surfaces		: gfx_bridge_tracks_BLS3 ;
		tunnels				: gfx_tunnel_tracks_BLS3 ;
		//level_crossings		: sw_lc_BLS3_state ;
		fences				: sw_fences_BLS3 ;
		depots				: sw_depot_BLS3 ;
		signals				: sw_signals ;
	}
}


# 1 "sukts.pnml" 2

# 1 "src/RAIL/SAAN.pnml" 1



spriteset(gfx_overlays_SAAN,			"gfx/RAIL/SAAN/Overlay_SAAN.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SAAN,			"gfx/RAIL/SAAN/Underlay_SAAN.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SAAN_wide,		"gfx/RAIL/SAAN/Underlay_SAAN_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SAAN,		"gfx/RAIL/SAAN/TunnelTrack_SAAN.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SAAN,		"gfx/RAIL/SAAN/BridgeTrack_SAAN.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SAAN,				"gfx/RAIL/SAAN/Fences_SAAN.png")		{	template_fences()					}
spriteset(gfx_depot_SAAN,				"gfx/RAIL/SAAN/Depot_SAAN.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SAAN_empty,	"gfx/RAIL/SAAN/LevelCrossing_SAAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SAAN_closed,	"gfx/RAIL/SAAN/LevelCrossing_SAAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SAAN_open,		"gfx/RAIL/SAAN/LevelCrossing_SAAN.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SAAN_empty_modern,		"gfx/RAIL/SAAN/LevelCrossingModern_SAAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SAAN_closed_modern,	"gfx/RAIL/SAAN/LevelCrossingModern_SAAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SAAN_open_modern,		"gfx/RAIL/SAAN/LevelCrossingModern_SAAN.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SAAN_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SAAN_closed ;
	gfx_level_crossing_SAAN_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SAAN_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SAAN_open ;
	gfx_level_crossing_SAAN_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SAAN_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SAAN_closed ;
	sw_lc_SAAN_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SAAN, wide_ballast) {
 1: gfx_underlays_SAAN_wide;
 gfx_underlays_SAAN;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SAAN, depot_type){
	0 : gfx_depot_SAAN ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SAAN, fence_number < 1){
	1 : gfx_fences_SAAN ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SAAN) {
	property {
		label						: "RAIL" ;
		name						: string(STR_SAAN_NAME) ;
		menu_text					: string(STR_SAAN_NAME) ;
		build_window_caption		: string(STR_RAIL_BUILD_NAME) ;
		autoreplace_text			: string(STR_RAIL_REPLACE_NAME) ;
		new_engine_text				: string(STR_RAIL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_RAIL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 6 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1804,1,1) ;
		sort_order					: 50 ;
		speed_limit					: param[2] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SAAN ;
		underlay			: sw_underlay_SAAN ;
		bridge_surfaces		: gfx_bridge_tracks_SAAN ;
		tunnels				: gfx_tunnel_tracks_SAAN ;
		level_crossings		: sw_lc_SAAN_state ;
		fences				: sw_fences_SAAN ;
		depots				: sw_depot_SAAN ;
		signals				: sw_signals ;
	}
}

item(FEAT_RAILTYPES, rail_SAAE) {
	property {
		label						: "ELRL" ;
		name						: string(STR_SAAE_NAME) ;
		menu_text					: string(STR_SAAE_NAME) ;
		build_window_caption		: string(STR_ELRL_BUILD_NAME) ;
		autoreplace_text			: string(STR_ELRL_REPLACE_NAME) ;
		new_engine_text				: string(STR_ELRL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_ELRL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 9 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 60 ;
		speed_limit					: param[2] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SAAN ;
		underlay			: sw_underlay_SAAN ;
		bridge_surfaces		: gfx_bridge_tracks_SAAN ;
		tunnels				: gfx_tunnel_tracks_SAAN ;
		level_crossings		: sw_lc_SAAN_state ;
		fences				: sw_fences_SAAN ;
		depots				: sw_depot_SAAN ;
		signals				: sw_signals ;
	}
}

# 1 "sukts.pnml" 2
# 1 "src/RAIL/SBAN.pnml" 1



spriteset(gfx_overlays_SBAN,			"gfx/RAIL/SBAN/Overlay_SBAN.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SBAN,			"gfx/RAIL/SBAN/Underlay_SBAN.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SBAN_wide,		"gfx/RAIL/SBAN/Underlay_SBAN_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SBAN,		"gfx/RAIL/SBAN/TunnelTrack_SBAN.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SBAN,		"gfx/RAIL/SBAN/BridgeTrack_SBAN.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SBAN,				"gfx/RAIL/SBAN/Fences_SBAN.png")		{	template_fences()					}
spriteset(gfx_depot_SBAN,				"gfx/RAIL/SBAN/Depot_SBAN.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SBAN_empty,	"gfx/RAIL/SBAN/LevelCrossing_SBAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SBAN_closed,	"gfx/RAIL/SBAN/LevelCrossing_SBAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SBAN_open,		"gfx/RAIL/SBAN/LevelCrossing_SBAN.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SBAN_empty_modern,		"gfx/RAIL/SBAN/LevelCrossingModern_SBAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SBAN_closed_modern,	"gfx/RAIL/SBAN/LevelCrossingModern_SBAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SBAN_open_modern,		"gfx/RAIL/SBAN/LevelCrossingModern_SBAN.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SBAN_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SBAN_closed ;
	gfx_level_crossing_SBAN_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SBAN_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SBAN_open ;
	gfx_level_crossing_SBAN_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SBAN_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SBAN_closed ;
	sw_lc_SBAN_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SBAN, wide_ballast) {
 1: gfx_underlays_SBAN_wide;
 gfx_underlays_SBAN;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SBAN, depot_type){
	0 : gfx_depot_SBAN ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SBAN, fence_number < 2){
	1 : gfx_fences_SBAN ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SBAN) {
	property {
		label						: "SBAN" ;
		name						: string(STR_SBAN_NAME) ;
		menu_text					: string(STR_SBAN_NAME) ;
		build_window_caption		: string(STR_RAIL_BUILD_NAME) ;
		autoreplace_text			: string(STR_RAIL_REPLACE_NAME) ;
		new_engine_text				: string(STR_RAIL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_RAIL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 11 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1804,1,1) ;
		sort_order					: 53 ;
		speed_limit					: param[5] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SBAN ;
		underlay			: sw_underlay_SBAN ;
		bridge_surfaces		: gfx_bridge_tracks_SBAN ;
		tunnels				: gfx_tunnel_tracks_SBAN ;
		level_crossings		: sw_lc_SBAN_state ;
		fences				: sw_fences_SBAN ;
		depots				: sw_depot_SBAN ;
		signals				: sw_signals ;
	}
}

item(FEAT_RAILTYPES, rail_SBAE) {
	property {
		label						: "SBAE" ;
		name						: string(STR_SBAE_NAME) ;
		menu_text					: string(STR_SBAE_NAME) ;
		build_window_caption		: string(STR_ELRL_BUILD_NAME) ;
		autoreplace_text			: string(STR_ELRL_REPLACE_NAME) ;
		new_engine_text				: string(STR_ELRL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_ELRL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 14 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 63 ;
		speed_limit					: param[5] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SBAN ;
		underlay			: sw_underlay_SBAN ;
		bridge_surfaces		: gfx_bridge_tracks_SBAN ;
		tunnels				: gfx_tunnel_tracks_SBAN ;
		level_crossings		: sw_lc_SBAN_state ;
		fences				: sw_fences_SBAN ;
		depots				: sw_depot_SBAN ;
		signals				: sw_signals ;
	}
}

# 1 "sukts.pnml" 2
# 1 "src/RAIL/SCAN.pnml" 1



spriteset(gfx_overlays_SCAN,			"gfx/RAIL/SCAN/Overlay_SCAN.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SCAN,			"gfx/RAIL/SCAN/Underlay_SCAN.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SCAN_wide,		"gfx/RAIL/SCAN/Underlay_SCAN_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SCAN,		"gfx/RAIL/SCAN/TunnelTrack_SCAN.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SCAN,		"gfx/RAIL/SCAN/BridgeTrack_SCAN.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SCAN,				"gfx/RAIL/SCAN/Fences_SCAN.png")		{	template_fences()					}
spriteset(gfx_depot_SCAN,				"gfx/RAIL/SCAN/Depot_SCAN.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SCAN_empty,	"gfx/RAIL/SCAN/LevelCrossing_SCAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SCAN_closed,	"gfx/RAIL/SCAN/LevelCrossing_SCAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SCAN_open,		"gfx/RAIL/SCAN/LevelCrossing_SCAN.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SCAN_empty_modern,		"gfx/RAIL/SCAN/LevelCrossingModern_SCAN.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SCAN_closed_modern,	"gfx/RAIL/SCAN/LevelCrossingModern_SCAN.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SCAN_open_modern,		"gfx/RAIL/SCAN/LevelCrossingModern_SCAN.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SCAN_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SCAN_closed ;
	gfx_level_crossing_SCAN_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SCAN_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SCAN_open ;
	gfx_level_crossing_SCAN_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SCAN_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SCAN_closed ;
	sw_lc_SCAN_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SCAN, wide_ballast) {
 1: gfx_underlays_SCAN_wide;
 gfx_underlays_SCAN;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SCAN, depot_type){
	0 : gfx_depot_SCAN ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SCAN, fence_number < 2){
	1 : gfx_fences_SCAN ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SCAN) {
	property {
		label						: "SCAN" ;
		name						: string(STR_SCAN_NAME) ;
		menu_text					: string(STR_SCAN_NAME) ;
		build_window_caption		: string(STR_RAIL_BUILD_NAME) ;
		autoreplace_text			: string(STR_RAIL_REPLACE_NAME) ;
		new_engine_text				: string(STR_RAIL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_RAIL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 17 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1935,1,1) ;
		sort_order					: 56 ;
		speed_limit					: param[8] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SCAN ;
		underlay			: sw_underlay_SCAN ;
		bridge_surfaces		: gfx_bridge_tracks_SCAN ;
		tunnels				: gfx_tunnel_tracks_SCAN ;
		level_crossings		: sw_lc_SCAN_state ;
		fences				: sw_fences_SCAN ;
		depots				: sw_depot_SCAN ;
		signals				: sw_signals ;
	}
}

item(FEAT_RAILTYPES, rail_SCAE) {
	property {
		label						: "SCAE" ;
		name						: string(STR_SCAE_NAME) ;
		menu_text					: string(STR_SCAE_NAME) ;
		build_window_caption		: string(STR_ELRL_BUILD_NAME) ;
		autoreplace_text			: string(STR_ELRL_REPLACE_NAME) ;
		new_engine_text				: string(STR_ELRL_NEW_TRAIN) ;
		toolbar_caption				: string(STR_ELRL_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 20 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1935,1,1) ;
		sort_order					: 66 ;
		speed_limit					: param[8] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SCAN ;
		underlay			: sw_underlay_SCAN ;
		bridge_surfaces		: gfx_bridge_tracks_SCAN ;
		tunnels				: gfx_tunnel_tracks_SCAN ;
		level_crossings		: sw_lc_SCAN_state ;
		fences				: sw_fences_SCAN ;
		depots				: sw_depot_SCAN ;
		signals				: sw_signals ;
	}
}

# 1 "sukts.pnml" 2

# 1 "src/SAAA/SAAA.pnml" 1

// Item

item(FEAT_RAILTYPES, rail_SAAA) {
	property {
		label						: "SAAA" ;
		name						: string(STR_SAAA_NAME) ;
		menu_text					: string(STR_SAAA_NAME) ;
		build_window_caption		: string(STR_SAAA_BUILD_NAME) ;
		autoreplace_text			: string(STR_SAAA_REPLACE_NAME) ;
		new_engine_text				: string(STR_SAAA_NEW_TRAIN) ;
		toolbar_caption				: string(STR_SAAA_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 9 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 60 ;
		speed_limit					: param[2] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SAAN ;
		underlay			: sw_underlay_SAAN ;
		bridge_surfaces		: gfx_bridge_tracks_SAAN ;
		tunnels				: gfx_tunnel_tracks_SAAN ;
		level_crossings		: sw_lc_SAAN_state ;
		fences				: sw_fences_SAAN ;
		depots				: sw_depot_SAAN ;
		signals				: sw_signals ;
		catenary_pylons		: gfx_catenary_masts_25 ;
	}
}

# 1 "sukts.pnml" 2
# 1 "src/SAAA/SBAA.pnml" 1

// Item

item(FEAT_RAILTYPES, rail_SBAA) {
	property {
		label						: "SBAA" ;
		name						: string(STR_SBAA_NAME) ;
		menu_text					: string(STR_SBAA_NAME) ;
		build_window_caption		: string(STR_SAAA_BUILD_NAME) ;
		autoreplace_text			: string(STR_SAAA_REPLACE_NAME) ;
		new_engine_text				: string(STR_SAAA_NEW_TRAIN) ;
		toolbar_caption				: string(STR_SAAA_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 14 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 63 ;
		speed_limit					: param[5] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SBAN ;
		underlay			: sw_underlay_SBAN ;
		bridge_surfaces		: gfx_bridge_tracks_SBAN ;
		tunnels				: gfx_tunnel_tracks_SBAN ;
		level_crossings		: sw_lc_SBAN_state ;
		fences				: sw_fences_SBAN ;
		depots				: sw_depot_SBAN ;
		signals				: sw_signals ;
		catenary_pylons		: gfx_catenary_masts_25 ;
	}
}

# 1 "sukts.pnml" 2
# 1 "src/SAAA/SCAA.pnml" 1

// Item

item(FEAT_RAILTYPES, rail_SCAA) {
	property {
		label						: "SCAA" ;
		name						: string(STR_SCAA_NAME) ;
		menu_text					: string(STR_SCAA_NAME) ;
		build_window_caption		: string(STR_SAAA_BUILD_NAME) ;
		autoreplace_text			: string(STR_SAAA_REPLACE_NAME) ;
		new_engine_text				: string(STR_SAAA_NEW_TRAIN) ;
		toolbar_caption				: string(STR_SAAA_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 20 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1935,1,1) ;
		sort_order					: 66 ;
		speed_limit					: param[8] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SCAN ;
		underlay			: sw_underlay_SCAN ;
		bridge_surfaces		: gfx_bridge_tracks_SCAN ;
		tunnels				: gfx_tunnel_tracks_SCAN ;
		level_crossings		: sw_lc_SCAN_state ;
		fences				: sw_fences_SCAN ;
		depots				: sw_depot_SCAN ;
		signals				: sw_signals ;
		catenary_pylons		: gfx_catenary_masts_25 ;
	}
}

# 1 "sukts.pnml" 2

//#include "src/3RDR/3RDR.pnml"
# 1 "src/3RDR/SAA3.pnml" 1



spriteset(gfx_overlays_SAA3,			"gfx/3RDR/SAA3/Overlay_SAA3.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SAA3,			"gfx/3RDR/SAA3/Underlay_SAA3.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SAA3_wide,		"gfx/3RDR/SAA3/Underlay_SAA3_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SAA3,		"gfx/3RDR/SAA3/TunnelTrack_SAA3.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SAA3,		"gfx/3RDR/SAA3/BridgeTrack_SAA3.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SAA3,				"gfx/3RDR/SAA3/Fences_SAA3.png")		{	template_fences()					}
spriteset(gfx_depot_SAA3,				"gfx/3RDR/SAA3/Depot_SAA3.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SAA3_empty,	"gfx/3RDR/SAA3/LevelCrossing_SAA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SAA3_closed,	"gfx/3RDR/SAA3/LevelCrossing_SAA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SAA3_open,		"gfx/3RDR/SAA3/LevelCrossing_SAA3.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SAA3_empty_modern,		"gfx/3RDR/SAA3/LevelCrossingModern_SAA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SAA3_closed_modern,	"gfx/3RDR/SAA3/LevelCrossingModern_SAA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SAA3_open_modern,		"gfx/3RDR/SAA3/LevelCrossingModern_SAA3.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SAA3_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SAA3_closed ;
	gfx_level_crossing_SAA3_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SAA3_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SAA3_open ;
	gfx_level_crossing_SAA3_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SAA3_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SAA3_closed ;
	sw_lc_SAA3_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SAA3, wide_ballast) {
 1: gfx_underlays_SAA3_wide;
 gfx_underlays_SAA3;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SAA3, depot_type){
	0 : gfx_depot_SAA3 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SAA3, fence_number < 1){
	1 : gfx_fences_SAA3 ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SAA3) {
	property {
		label						: "SAA3" ;
		name						: string(STR_SAA3_NAME) ;
		menu_text					: string(STR_SAA3_NAME) ;
		build_window_caption		: string(STR_3RDR_BUILD_NAME) ;
		autoreplace_text			: string(STR_3RDR_REPLACE_NAME) ;
		new_engine_text				: string(STR_3RDR_NEW_TRAIN) ;
		toolbar_caption				: string(STR_3RDR_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ", "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 8 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1880,1,1) ;
		sort_order					: 70 ;
		speed_limit					: param[2] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SAA3 ;
		underlay			: sw_underlay_SAA3 ;
		bridge_surfaces		: gfx_bridge_tracks_SAA3 ;
		tunnels				: gfx_tunnel_tracks_SAA3 ;
		level_crossings		: sw_lc_SAA3_state ;
		fences				: sw_fences_SAA3 ;
		depots				: sw_depot_SAA3 ;
		signals				: sw_signals ;
	}
}


item(FEAT_RAILTYPES, rail_SAAZ) {
	property {
		label						: "SAAZ" ;
		name						: string(STR_SAAZ_NAME) ;
		menu_text					: string(STR_SAAZ_NAME) ;
		build_window_caption		: string(STR_3RDC_BUILD_NAME) ;
		autoreplace_text			: string(STR_3RDC_REPLACE_NAME) ;
		new_engine_text				: string(STR_3RDC_NEW_TRAIN) ;
		toolbar_caption				: string(STR_3RDC_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 10 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 80 ;
		speed_limit					: param[2] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SAA3 ;
		underlay			: sw_underlay_SAA3 ;
		bridge_surfaces		: gfx_bridge_tracks_SAA3 ;
		tunnels				: gfx_tunnel_tracks_SAA3 ;
		level_crossings		: sw_lc_SAA3_state ;
		fences				: sw_fences_SAA3 ;
		depots				: sw_depot_SAA3 ;
		signals				: sw_signals ;
	}
}

# 1 "sukts.pnml" 2
//#include "src/3RDR/SBA3.pnml"
//#include "src/3RDR/SCA3.pnml"
# 1 "src/3RDR/SDA3.pnml" 1



spriteset(gfx_overlays_SDA3,			"gfx/3RDR/SDA3/Overlay_SDA3.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SDA3,			"gfx/3RDR/SDA3/Underlay_SDA3.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SDA3_wide,		"gfx/3RDR/SDA3/Underlay_SDA3_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SDA3,		"gfx/3RDR/SDA3/TunnelTrack_SDA3.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SDA3,		"gfx/3RDR/SDA3/BridgeTrack_SDA3.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SDA3,				"gfx/3RDR/SDA3/Fences_SDA3.png")		{	template_fences()					}
spriteset(gfx_depot_SDA3,				"gfx/3RDR/SDA3/Depot_SDA3.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SDA3_empty,	"gfx/3RDR/SDA3/LevelCrossing_SDA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SDA3_closed,	"gfx/3RDR/SDA3/LevelCrossing_SDA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SDA3_open,		"gfx/3RDR/SDA3/LevelCrossing_SDA3.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SDA3_empty_modern,		"gfx/3RDR/SDA3/LevelCrossingModern_SDA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SDA3_closed_modern,	"gfx/3RDR/SDA3/LevelCrossingModern_SDA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SDA3_open_modern,		"gfx/3RDR/SDA3/LevelCrossingModern_SDA3.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SDA3_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SDA3_closed ;
	gfx_level_crossing_SDA3_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SDA3_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SDA3_open ;
	gfx_level_crossing_SDA3_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SDA3_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SDA3_closed ;
	sw_lc_SDA3_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SDA3, wide_ballast) {
 1: gfx_underlays_SDA3_wide;
 gfx_underlays_SDA3;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SDA3, depot_type){
	0 : gfx_depot_SDA3 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SDA3, fence_number < 2){
	1 : gfx_fences_SDA3 ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SDA3) {
	property {
		label						: "SDA3" ;
		name						: string(STR_SDA3_NAME) ;
		menu_text					: string(STR_SDA3_NAME) ;
		build_window_caption		: string(STR_3RDR_BUILD_NAME) ;
		autoreplace_text			: string(STR_3RDR_REPLACE_NAME) ;
		new_engine_text				: string(STR_3RDR_NEW_TRAIN) ;
		toolbar_caption				: string(STR_3RDR_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ", "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 13 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1880,1,1) ;
		sort_order					: 73;
		speed_limit					: param[5] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SDA3 ;
		underlay			: sw_underlay_SDA3 ;
		bridge_surfaces		: gfx_bridge_tracks_SDA3 ;
		tunnels				: gfx_tunnel_tracks_SDA3 ;
		level_crossings		: sw_lc_SDA3_state ;
		fences				: sw_fences_SDA3 ;
		depots				: sw_depot_SDA3 ;
		signals				: sw_signals ;
	}
}


item(FEAT_RAILTYPES, rail_3RDC) {
	property {
		label						: "3RDC" ;
		name						: string(STR_3RDC_NAME) ;
		menu_text					: string(STR_3RDC_NAME) ;
		build_window_caption		: string(STR_3RDC_BUILD_NAME) ;
		autoreplace_text			: string(STR_3RDC_REPLACE_NAME) ;
		new_engine_text				: string(STR_3RDC_NEW_TRAIN) ;
		toolbar_caption				: string(STR_3RDC_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 15 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask(RAILTYPE_FLAG_CATENARY) ;
		introduction_date			: date(1883,1,1) ;
		sort_order					: 83 ;
		speed_limit					: param[5] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SDA3 ;
		underlay			: sw_underlay_SDA3 ;
		bridge_surfaces		: gfx_bridge_tracks_SDA3 ;
		tunnels				: gfx_tunnel_tracks_SDA3 ;
		level_crossings		: sw_lc_SDA3_state ;
		fences				: sw_fences_SDA3 ;
		depots				: sw_depot_SDA3 ;
		signals				: sw_signals ;
	}
}

# 1 "sukts.pnml" 2
//#include "src/3RDR/SEA3.pnml"
# 1 "src/3RDR/SFA3.pnml" 1



spriteset(gfx_overlays_SFA3,			"gfx/3RDR/SFA3/Overlay_SFA3.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SFA3,			"gfx/3RDR/SFA3/Underlay_SFA3.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SFA3_wide,		"gfx/3RDR/SFA3/Underlay_SFA3_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SFA3,		"gfx/3RDR/SFA3/TunnelTrack_SFA3.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SFA3,		"gfx/3RDR/SFA3/BridgeTrack_SFA3.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SFA3,				"gfx/3RDR/SFA3/Fences_SFA3.png")		{	template_fences()					}
spriteset(gfx_depot_SFA3,				"gfx/3RDR/SFA3/Depot_SFA3.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SFA3_empty,	"gfx/3RDR/SFA3/LevelCrossing_SFA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SFA3_closed,	"gfx/3RDR/SFA3/LevelCrossing_SFA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SFA3_open,		"gfx/3RDR/SFA3/LevelCrossing_SFA3.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SFA3_empty_modern,		"gfx/3RDR/SFA3/LevelCrossingModern_SFA3.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SFA3_closed_modern,	"gfx/3RDR/SFA3/LevelCrossingModern_SFA3.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SFA3_open_modern,		"gfx/3RDR/SFA3/LevelCrossingModern_SFA3.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SFA3_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SFA3_closed ;
	gfx_level_crossing_SFA3_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SFA3_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SFA3_open ;
	gfx_level_crossing_SFA3_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SFA3_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SFA3_closed ;
	sw_lc_SFA3_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SFA3, wide_ballast) {
 1: gfx_underlays_SFA3_wide;
 gfx_underlays_SFA3;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SFA3, depot_type){
	0 : gfx_depot_SFA3 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SFA3, fence_number < 2){
	1 : gfx_fences_SFA3 ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SFA3) {
	property {
		label						: "SFA3" ;
		name						: string(STR_SFA3_NAME) ;
		menu_text					: string(STR_SFA3_NAME) ;
		build_window_caption		: string(STR_3RDR_BUILD_NAME) ;
		autoreplace_text			: string(STR_3RDR_REPLACE_NAME) ;
		new_engine_text				: string(STR_3RDR_NEW_TRAIN) ;
		toolbar_caption				: string(STR_3RDR_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ", "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 19 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1935,1,1) ;
		sort_order					: 76 ;
		speed_limit					: param[8] mph ;
		extra_aspects				: signal_elec;
	}
	graphics {
		track_overlay		: gfx_overlays_SFA3 ;
		underlay			: sw_underlay_SFA3 ;
		bridge_surfaces		: gfx_bridge_tracks_SFA3 ;
		tunnels				: gfx_tunnel_tracks_SFA3 ;
		level_crossings		: sw_lc_SFA3_state ;
		fences				: sw_fences_SFA3 ;
		depots				: sw_depot_SFA3 ;
		signals				: sw_signals ;
	}
}




# 1 "sukts.pnml" 2

//#include "src/4RDR/SAA4.pnml"
//#include "src/4RDR/SBA4.pnml"
//#include "src/4RDR/SCA4.pnml"
# 1 "src/4RDR/SDA4.pnml" 1



spriteset(gfx_overlays_SDA4,			"gfx/4RDR/SDA4/Overlay_SDA4.png")		{	template_overlay_auz()				}
spriteset(gfx_underlays_SDA4,			"gfx/4RDR/SDA4/Underlay_SDA4.png")		{	template_underlay_auz()				}
spriteset(gfx_underlays_SDA4_wide,		"gfx/4RDR/SDA4/Underlay_SDA4_wide.png")	{	template_underlay_auz()				}
spriteset(gfx_tunnel_tracks_SDA4,		"gfx/4RDR/SDA4/TunnelTrack_SDA4.png")	{	template_tunneltracks()				}
spriteset(gfx_bridge_tracks_SDA4,		"gfx/4RDR/SDA4/BridgeTrack_SDA4.png")	{	template_bridgetracks()				}


spriteset(gfx_fences_SDA4,				"gfx/4RDR/SDA4/Fences_SDA4.png")		{	template_fences()					}
spriteset(gfx_depot_SDA4,				"gfx/4RDR/SDA4/Depot_SDA4.png")			{	template_depot()					}


spriteset(gfx_level_crossing_SDA4_empty,	"gfx/4RDR/SDA4/LevelCrossing_SDA4.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SDA4_closed,	"gfx/4RDR/SDA4/LevelCrossing_SDA4.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SDA4_open,		"gfx/4RDR/SDA4/LevelCrossing_SDA4.png")	{template_levcrossopen()				}

spriteset(gfx_level_crossing_SDA4_empty_modern,		"gfx/4RDR/SDA4/LevelCrossingModern_SDA4.png")	{tmpl_level_crossing_railtypes_empty()	}
spriteset(gfx_level_crossing_SDA4_closed_modern,	"gfx/4RDR/SDA4/LevelCrossingModern_SDA4.png")	{template_levcrossclosed()				}
spriteset(gfx_level_crossing_SDA4_open_modern,		"gfx/4RDR/SDA4/LevelCrossingModern_SDA4.png")	{template_levcrossopen()				}


// Level crossing switches

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SDA4_closed, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SDA4_closed ;
	gfx_level_crossing_SDA4_closed_modern;
}

switch(FEAT_RAILTYPES,	SELF,	sw_lc_SDA4_open, current_year){ 
	0 .. 1970 - 1	: gfx_level_crossing_SDA4_open ;
	gfx_level_crossing_SDA4_open_modern;
}

switch(FEAT_RAILTYPES, SELF, sw_lc_SDA4_state, level_crossing_status){
	LEVEL_CROSSING_CLOSED : sw_lc_SDA4_closed ;
	sw_lc_SDA4_open ;
}


// Wide ballast?

switch(FEAT_RAILTYPES, SELF, sw_underlay_SDA4, wide_ballast) {
 1: gfx_underlays_SDA4_wide;
 gfx_underlays_SDA4;
}


// Custom depot?

switch(FEAT_RAILTYPES, SELF, sw_depot_SDA4, depot_type){
	0 : gfx_depot_SDA4 ;
	1 : gfx_depot_1 ;
}


// Fences?

switch(FEAT_RAILTYPES, SELF, sw_fences_SDA4, fence_number < 2){
	1 : gfx_fences_SDA4 ;
	gfx_blank ;
}





// Item

item(FEAT_RAILTYPES, rail_SDA4) {
	property {
		label						: "SDA4" ;
		name						: string(STR_SDA4_NAME) ;
		menu_text					: string(STR_SDA4_NAME) ;
		build_window_caption		: string(STR_4RDR_BUILD_NAME) ;
		autoreplace_text			: string(STR_4RDR_REPLACE_NAME) ;
		new_engine_text				: string(STR_4RDR_NEW_TRAIN) ;
		toolbar_caption				: string(STR_4RDR_TOOLBAR) ;
		compatible_railtype_list	: ["RAIL", "RLOW", "RMED", "RHIG", "SAAN", "SABN", "SACN", "SBAN", "SBBN", "SBCN", "SCAN", "SCBN", "SCCN", "SDAN", "SDBN", "DBNN", "DBHN", "_040", "_080", "SEAN", "SFAN", "SGAN", "ELRL", "ELOW", "EMED", "EHIG", "HSTR", "SAAE", "SABE", "SACE", "SBAE", "SBBE", "SBCE", "SCAE", "SCBE", "SCCE", "SDAE", "SDBE", "SEAE", "SEBE", "DBNE", "DBHE", "DBHS", "E040", "E080", "SFAE", "SGAE", "SHAE", "3RDR", "3LOW", "3MED", "SAA3", "SAB3", "SAC3", "SBA3", "SBB3", "SBC3", "SCA3", "SCB3", "SCC3", "SDA3", "SEA3", "SFA3" , "4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4", "3RDC", "CLOW", "CMED", "SAAZ", "SABZ", "SACZ", "SBAZ", "SBBZ", "SBCZ", "SCAZ", "SCBZ", "SCCZ", "SDAZ"] ;
		powered_railtype_list		: ["4RDR", "4LOW", "4MED", "SAA4", "SAB4", "SAC4", "SBA4", "SBB4", "SBC4", "SCA4", "SCB4", "SCC4", "MTRO", "MTRC", "MTRS", "MTRU", "MTRT", "SDA4"] ;
		curve_speed_multiplier		: 0 ;
		station_graphics			: RAILTYPE_STATION_NORMAL ;
		construction_cost			: 7 ;
		acceleration_model			: ACC_MODEL_RAIL ;
		railtype_flags				: bitmask() ;
		introduction_date			: date(1907,1,1) ;
		sort_order					: 90 ;
		speed_limit					: param[5] mph ;
	}
	graphics {
		track_overlay		: gfx_overlays_SDA4 ;
		underlay			: sw_underlay_SDA4 ;
		bridge_surfaces		: gfx_bridge_tracks_SDA4 ;
		tunnels				: gfx_tunnel_tracks_SDA4 ;
		level_crossings		: sw_lc_SDA4_state ;
		fences				: sw_fences_SDA4 ;
		depots				: sw_depot_SDA4 ;
		signals				: sw_aspect2 ;
	}
}



# 1 "sukts.pnml" 2



//#include "src/footer.pnml"
